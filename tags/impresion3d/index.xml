<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Impresion3D on B0ny&#39;s Blog</title>
    <link>/tags/impresion3d/</link>
    <description>Recent content in Impresion3D on B0ny&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="/tags/impresion3d/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Impresora 3D</title>
      <link>/posts/impresora-3d/</link>
      <pubDate>Mon, 20 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>/posts/impresora-3d/</guid>
      <description>&lt;p&gt;Hace unos años compré una impresora 3D motivado por una charla a la que había concurrido unos años antes. En esta charla se trató sobre las impresoras que había en el mercado y qué es lo que se puede hacer con ellas, tipos de impresoras, materiales imprimibles y servicios técnicos.&lt;/p&gt;
&lt;p&gt;Sobre esta charla decidí que quería una impresora de tipo FDM, (imprime por deposición de filamento) ya que es más fácil imprimir con ellas, no requiere un post procesado y es más &amp;ldquo;plug &amp;amp; play&amp;rdquo;.&lt;/p&gt;</description>
      <content>&lt;p&gt;Hace unos años compré una impresora 3D motivado por una charla a la que había concurrido unos años antes. En esta charla se trató sobre las impresoras que había en el mercado y qué es lo que se puede hacer con ellas, tipos de impresoras, materiales imprimibles y servicios técnicos.&lt;/p&gt;
&lt;p&gt;Sobre esta charla decidí que quería una impresora de tipo FDM, (imprime por deposición de filamento) ya que es más fácil imprimir con ellas, no requiere un post procesado y es más &amp;ldquo;plug &amp;amp; play&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;De las que se encontraban en Montevideo, opté por la marca Artillery, en el modelo Sidewinder X1, ya que el volúmen de impresión es ligeramente mayor a las demás por un precio accesible, 300 mm X 300 mm X 400 mm a 700 USD.&lt;/p&gt;
&lt;p&gt;La intención con la impresora era poder hacer piezas para proyectos personales y piezas de repuesto. Sin embargo, surge la posibilidad de recuperar el dinero invertido haciéndola trabajar.&lt;/p&gt;
&lt;p&gt;Para ello se tomó en cuenta los costos de los materiales, el costo de la luz eléctrica y se le adiciona un porcentaje de uso de la máquina en caso de que se rompa. Luego se decide cuanto dinero se quiere ganar por mes, se divide entre las horas que puede trabajar la impresora y de eso sale el costo por hora.&lt;/p&gt;
&lt;p&gt;Mi plan no fue hacerme millonario, sino, que la impresora se pueda pagar sola con el tiempo y así fue. Tengo una impresora 3D &amp;ldquo;gratis&amp;rdquo;. Esto llevo mas de 3 años, sin embargo, no hubo apuro y aun la sigo disfrutando.&lt;/p&gt;
&lt;p&gt;He notado que las personas no poseen el conocimiento de que se puede hacer y que no con una impresora de este tipo. Está en nosotros el enseñarles y abrir esas mentes para que el mercado se amplíe.&lt;/p&gt;
&lt;p&gt;Algunos proyectos que he podido realizar han sido los tiradores de mi ropero, cajas para proyectos como el [[Automatismo para Elevadores Monofásicos]], los pasacables de mi escritorio.
Dentro de los trabajos que he realizado son prototipos de perfiles de aluminio para una metalúrgica, embellecedores para cerraduras, paneles frontales para radios de automóviles, entre otros.&lt;/p&gt;
&lt;p&gt;Empezó siendo un chiche tecnológico y se transformo en un medio-negocio.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Panel de la radio</title>
      <link>/posts/panel-de-la-radio/</link>
      <pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/panel-de-la-radio/</guid>
      <description>&lt;p&gt;En esta oportunidad les voy a comentar mi experiencia realizando un plástico cobertor para la radio del auto.&lt;/p&gt;
&lt;p&gt;En pos de mejorar las funcionalidades de mi vehículo, hace un tiempo compre una radio con pantalla de marca Pioneer, de sonido, genial, lo demás una bosta.
La radio entra en el tablero del auto, sin embargo hay que colocarle un plástico para que se sostenga firmemente y además sea medianamente estético.&lt;/p&gt;</description>
      <content>&lt;p&gt;En esta oportunidad les voy a comentar mi experiencia realizando un plástico cobertor para la radio del auto.&lt;/p&gt;
&lt;p&gt;En pos de mejorar las funcionalidades de mi vehículo, hace un tiempo compre una radio con pantalla de marca Pioneer, de sonido, genial, lo demás una bosta.
La radio entra en el tablero del auto, sin embargo hay que colocarle un plástico para que se sostenga firmemente y además sea medianamente estético.&lt;/p&gt;
&lt;p&gt;Para comenzar, le tomé las medidas a la radio, continuando con las del boquete del tablero del auto.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/RadioHole.jpg&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego, utilizando el programa Fusion 360, diseñé la tapa para recubrir esto y sostener la radio.
Para luego imprimirla en 3D con el materia PLA+, que es fácil de imprimir, sirve para pruebas pero no es muy resistente. (Luego se hizo en ABS que es más duradero).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/RadioCoverPlateDesign2.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/RadioCoverPlateDesign1.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;Las flechas en azul marcan los lugares para colocar la goma al rededor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/RadioCoverPlate1.jpg&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;Como dato curioso, al diseñar la pieza, se le hizo un calado, (canaleta) en los bordes para poder colocar una goma y así absorber las vibraciones y evitar ruidos molestos.&lt;/p&gt;
&lt;p&gt;Para terminar con el siguiente resultado
&lt;img src=&#34;/images/RadioCoverPlate.jpg&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;El color no es el mismo, sin embargo, en este momento no me preocupa, ya que quiero validar la idea y el prototipo un tiempo para imprimirlo en ABS y que sea el definitivo.&lt;/p&gt;
&lt;p&gt;En conclusión, el proyecto fue satisfactorio y bastante fácil de realizar al ser un modelo prismático con algún que otro esteroide.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Automatismo para Elevadores Monofásicos</title>
      <link>/posts/automatismo-para-elevadores-monof%C3%A1sicos/</link>
      <pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/automatismo-para-elevadores-monof%C3%A1sicos/</guid>
      <description>&lt;h2 id=&#34;situación&#34;&gt;Situación&lt;/h2&gt;
&lt;p&gt;Los talleres mecánicos suelen contar con elevadores, los cuales se clasifican en monofásicos o trifásicos. Sin embargo, estos equipos suelen ser lentos: para elevar un automóvil desde el suelo hasta una altura en la que una persona pueda caminar cómodamente por debajo, generalmente tardan alrededor de 90 segundos. Además, durante este proceso, el usuario debe mantener presionado un botón, lo que puede resultar incómodo y costoso en un entorno donde el tiempo es un factor crítico.&lt;/p&gt;</description>
      <content>&lt;h2 id=&#34;situación&#34;&gt;Situación&lt;/h2&gt;
&lt;p&gt;Los talleres mecánicos suelen contar con elevadores, los cuales se clasifican en monofásicos o trifásicos. Sin embargo, estos equipos suelen ser lentos: para elevar un automóvil desde el suelo hasta una altura en la que una persona pueda caminar cómodamente por debajo, generalmente tardan alrededor de 90 segundos. Además, durante este proceso, el usuario debe mantener presionado un botón, lo que puede resultar incómodo y costoso en un entorno donde el tiempo es un factor crítico.&lt;/p&gt;
&lt;p&gt;Para mejorar esta situación, se decidió implementar un sistema automatizado que permita seleccionar entre tres niveles predefinidos. Con solo presionar un botón, el elevador se desplazará automáticamente sin necesidad de intervención por parte del usuario.&lt;/p&gt;
&lt;p&gt;El sistema está basado en un microcontrolador ATMEGA 328P (Arduino Nano), y cuenta con una serie de componentes como resistencias pull-up de 10 KΩ, tres sensores magnéticos y tres botones.&lt;/p&gt;
&lt;p&gt;El diseño de este sistema se ha orientado a ser simple, de bajo costo y fácil de mantener. Por ello, se optó por utilizar materiales comunes y accesibles en el mercado, evitando componentes especializados. Los botones, de gran tamaño, se eligieron por su practicidad y por el aporte estético que brindan al conjunto. Los sensores magnéticos, económicos y ampliamente disponibles en el mercado de alarmas, también fueron seleccionados por su fiabilidad. Finalmente, el microcontrolador fue elegido por su bajo costo y su facilidad de programación, ofreciendo suficientes entradas y salidas digitales para las necesidades del proyecto.&lt;/p&gt;
&lt;h3 id=&#34;requerimientos&#34;&gt;Requerimientos&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;3 Botones normalmente abiertos para las alturas fijadas&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 Botón normalmente cerrado como interruptor general
&lt;img src=&#34;/images/BotonIndustrial.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3 Sensores los cuales definen las alturas
&lt;img src=&#34;/images/SensorMagnetico.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Arduino nano
&lt;img src=&#34;/images/ArduinoNano.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Resistencias de 10 Kilo Ohm
&lt;img src=&#34;/images/Resistencias10K.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fuente de 12 V 400 ma
&lt;img src=&#34;/images/Fuente12V400ma.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Relé
&lt;img src=&#34;/images/RelayArduino.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Caja para guardar la electrónica&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Estaño&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cables&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;construcción&#34;&gt;Construcción&lt;/h3&gt;
&lt;p&gt;En primer lugar, se realizaron pruebas en un protoboard para evaluar la viabilidad de los componentes. Afortunadamente, las pruebas fueron exitosas desde el principio. Inicialmente, se consideraron llaves mecánicas como sensores, pero se desechó esta opción debido a que su uso implicaría un desgaste significativo con el tiempo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/ProtoboardElevador.jpg&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;El código para el Arduino fue escrito en lenguaje C utilizando el IDE de Arduino. En él, se definen los pines de entrada y salida, así como la lógica para determinar cuándo debe activarse o desactivarse el relé que controla el disyuntor del elevador. Además, se implementó una programación defensiva, de modo que si uno de los sensores falla, el sensor superior detiene automáticamente la acción del relé para evitar posibles fallos en el sistema.&lt;/p&gt;
&lt;h3 id=&#34;código&#34;&gt;Código&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define  OUTPUT_PIN       (2)   &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Relay
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define LOW_LEVEL         (3)   &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Low level button
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define MEDIUM_LEVEL      (4)   &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Medium level button
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define HIGH_LEVEL        (5)   &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// High level button
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define LOW_LEVEL_END     (6)   &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Low level sensor
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define MEDIUM_LEVEL_END  (7)   &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Medium level sensor
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define HIGH_LEVEL_END    (8)   &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// High level sensor
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Level to reach
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;uint8_t&lt;/span&gt; levelToReach &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Elevating flag, true while elevating, false when done
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; working &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Flag to write OUTPUT_PIN pin one time
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; switched &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * Returns the level to reach as the pin number asigned
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;uint8_t&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getLevelToReach&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * If any sensor upper or in the same level is activated, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * the level is reached for protection.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isLevelReached&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * Setup all the stuff
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;pinMode&lt;/span&gt;(OUTPUT_PIN, OUTPUT);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;pinMode&lt;/span&gt;(LOW_LEVEL, INPUT);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;pinMode&lt;/span&gt;(MEDIUM_LEVEL, INPUT);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;pinMode&lt;/span&gt;(HIGH_LEVEL, INPUT);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;pinMode&lt;/span&gt;(LOW_LEVEL_END, INPUT);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;pinMode&lt;/span&gt;(MEDIUM_LEVEL_END, INPUT);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;pinMode&lt;/span&gt;(HIGH_LEVEL_END, INPUT);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  levelToReach &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  working &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  switched &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * Main loop
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (working) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;uint8_t&lt;/span&gt; newLevel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getLevelToReach&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (newLevel &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      levelToReach &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newLevel;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;switched) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;digitalWrite&lt;/span&gt;(OUTPUT_PIN, HIGH);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      switched &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;isLevelReached&lt;/span&gt;()) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;digitalWrite&lt;/span&gt;(OUTPUT_PIN, LOW);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      working &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    levelToReach &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getLevelToReach&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    working &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; levelToReach &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; LOW;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    switched &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;uint8_t&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getLevelToReach&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;digitalRead&lt;/span&gt;(LOW_LEVEL) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; HIGH)  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; LOW_LEVEL;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;digitalRead&lt;/span&gt;(MEDIUM_LEVEL) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; HIGH) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; MEDIUM_LEVEL;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;digitalRead&lt;/span&gt;(HIGH_LEVEL) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; HIGH) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; HIGH_LEVEL;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isLevelReached&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (levelToReach &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; HIGH_LEVEL &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;digitalRead&lt;/span&gt;(HIGH_LEVEL_END) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; HIGH) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (levelToReach &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; MEDIUM_LEVEL &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;digitalRead&lt;/span&gt;(MEDIUM_LEVEL_END) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; HIGH) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (levelToReach &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; LOW_LEVEL &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;digitalRead&lt;/span&gt;(LOW_LEVEL_END) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; HIGH) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;esquemático&#34;&gt;Esquemático&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/images/EsquematicoAutomatismoElevador.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/EsquematicoArduinoElevador.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;diseño-de-la-caja&#34;&gt;Diseño de la Caja&lt;/h3&gt;
&lt;p&gt;El diseño de la caja se realizó utilizando el software Fusion 360 de Autodesk, respetando las dimensiones de los componentes que se incluirían en su interior. La caja fue diseñada para alojar de manera adecuada los cuatro botones (tres en la parte frontal y uno en la superior), así como un espacio para los cables, el Arduino, la fuente de alimentación y el relé.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/CajaElevador1.jpg&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/CajaElevador2.jpg&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/CajaElevador3.jpg&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
